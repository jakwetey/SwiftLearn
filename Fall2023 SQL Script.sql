----09/13/2023-----
-----DDL - Data Definition Language
--CREATE - Used to create a new database object such as a table, view, index, or procedure
--ALTER - Used to modify an existing database object
--DROP - Used to delete an existing database object
--TRUNCATE - Used to remove all data from a table, but keep the table structure

-----SQL DATATYPES
--INTEGER/ INT 
--FLOAT 
--VARCHAR() 
--CHAR()
--NVARCHAR()
--NCHAR()
--DATE 
--BOOLEAN 


----SQL CONSTRAINTS
--NOT NULL - Ensures that a column cannot have a null value
--PRIMARY KEY - Uniquely identifies each row in a table and cannot have null values.
--FOREIGN KEY - Enforces a link OR relationship between the data in two tables
--UNIQUE - Ensures that all values in a column are distinct
--CHECK - Ensures that the value in a column meets a specific condition
--DEFAULT - Provides a default value for a column when no value is specified 


---HOSPITAL_DB
--CLAIMS
--PROVIDER
--PATIENT
--PAYOR

---SYNTAX
--CREATE DATABASE  DATABASE_NAME;

--CREATING HOSPITAL DATABASE 
CREATE DATABASE HOSPITAL_DB;

USE HOSPITAL_DB;

--- CREATING CLAIMS TABLE
CREATE TABLE CLAIMS
(
CLAIM_NUMBER INTEGER NOT NULL,
PROVIDER_ID VARCHAR(10) NOT NULL,
PATIENT_ID VARCHAR(10) NOT NULL,
PAYOR_ID VARCHAR(10) NOT NULL,
DATE_OF_SERVICE DATE NULL,
D_CODE CHAR(4) NOT NULL,
AMOUNT MONEY NOT NULL
);

---ADDING PRIMARY KEY TO TABLE
ALTER TABLE CLAIMS
ADD CONSTRAINT PK_CLAIMS_CLAIM_NUMBER PRIMARY KEY(CLAIM_NUMBER);

---- PROVIDER TABLE
CREATE TABLE PROVIDER
(ID VARCHAR(10)NOT NULL,
PROVIDER_NAME VARCHAR(50) NOT NULL
);

--ADDING PRIMARY KEY
ALTER TABLE PROVIDER 
ADD CONSTRAINT PK_PROVIDER_ID PRIMARY KEY(ID);

--- CREATING PATIENT TABLE
CREATE TABLE PATIENT
(
ID VARCHAR(10) NOT NULL,
F_NAME VARCHAR(50) NOT NULL,
L_NAME VARCHAR(50) NOT NULL,
GENDER CHAR(1) NULL,
PHONE CHAR(10) NULL,
CITY VARCHAR(50) NOT NULL,
STATE CHAR(2) NOT NULL
);

--ADDING PRIMARY KEY
ALTER TABLE PATIENT
ADD CONSTRAINT PK_PATIENT_ID PRIMARY KEY(ID);

---PAYOR TABLE
CREATE TABLE PAYOR
(
ID INT IDENTITY(100, 1),
PAYOR_NAME VARCHAR(50) NOT NULL,
);

--ADDING PRIMARY KET TO PAYOR
ALTER TABLE PAYOR
ADD CONSTRAINT PK_PAYOR_ID PRIMARY KEY(ID);

-- ADDING FOREIGN KEY CONSTRAINT
--PROVIDER ID FK
ALTER TABLE CLAIMS
ADD CONSTRAINT FK_CLAIMS_PROVIDER_ID FOREIGN KEY(PROVIDER_ID)
REFERENCES PROVIDER(ID);

-- PATIENT ID FK
ALTER TABLE CLAIMS
ADD CONSTRAINT FK_CLAIMS_PATIENT_ID FOREIGN KEY(PATIENT_ID)
REFERENCES PATIENT(ID);

--PAYOR ID FK
ALTER TABLE CLAIMS
ADD CONSTRAINT FK_CLAIMS_PAYOR_ID FOREIGN KEY(PAYOR_ID)
REFERENCES PAYOR(ID);

--MODIFY PAYOR_ID COLUMN IN CLAIMS
ALTER TABLE CLAIMS
ALTER COLUMN PAYOR_ID INT NOT NULL;

--ADDING DOB COLUMN TO PATIENT
ALTER TABLE PATIENT
ADD DOB DATE ;

--MODIFYING COLUMN DATATYPE
ALTER TABLE PATIENT 
ALTER COLUMN DOB DATE NOT NULL;

--REMOVING DOB COLUMN
ALTER TABLE PATIENT
DROP COLUMN DOB;


------09/14/2023------
-- CHECK
--ADDING A CHECK CONSTRAINT TO PHONE NUMBER LENGHT
ALTER TABLE PATIENT
ADD CONSTRAINT CK_PATIENT_PHONE CHECK(LEN(PHONE) = 10);

--ADDING SSN TO PATIENT TABLE
ALTER TABLE PATIENT
ADD SSN CHAR(9)NOT NULL ;

--- ADDING UNIQUE CONSTRAINT TO SSN COLUMN
ALTER TABLE PATIENT
ADD CONSTRAINT UQ_PATIENT_SSN UNIQUE(SSN);

---INDEXES
---INDEXES ARE USED TO RETRIEVE DATA FROM DATABASES MORE QUICK, THEY HELP SPEED UP QUERIES.

----CLUSTERED 
--Whenever you apply clustered indexing in a table, it will perform sorting 
--in that table only. You can create only one clustered index in a table like primary key.
--Clustered index is as same as dictionary where the data is arranged by alphabetical order. 
--If you apply primary key to any column, then automatically it will become clustered index. 

----NONCLUSTERED
--is similar to the index of a book. The index of a book consists of a chapter name and page number, 
--if you want to read any topic or chapter then you can directly go to that page by using index of
-- that book. No need to go through each and every page of a book. 

--ADDING INDEX TO PATIENT TABLE
CREATE CLUSTERED INDEX IDX_PATIENT_PHONE
ON PATIENT(PHONE);
 
CREATE NONCLUSTERED INDEX IDX_PATIENT_PHONE
ON PATIENT(PHONE);

---REMOVING AN INDEX
DROP INDEX IDX_PATIENT_PHONE
ON PATIENT;

DROP INDEX PATIENT.IDX_PATIENT_PHONE;

----DML-- DATA MANIPULATION LANGUAGE---
--INSERT -- POPULATE RECORDS INTO THE TABLE
--UPDATE -- MODIFY AN EXISTING RECORD BASED ON A GIVEN CONDITION
--DELETE -- REMOVE EXISTING RECORDS BASED ON A GIVEN CONDITION..
		-- WHEN NO CONDITION IS SPECIFIED ALL RECORDS ARE REMOVED
--SELECT --RETRIEVE RECORDS FROM TABLES

---INSERT
--SYNTAX
--INSERT INTO TABLE_NAME(COLUMN1, COLUMN2, COLUMN3.....)
--VALUES 
--('VALUE1',  'VALUE2', 'VALUE3'),
--('VALUE1',  'VALUE2', 'VALUE3'),
--('VALUE1',  'VALUE2', 'VALUE3'),
--('VALUE1',  'VALUE2', 'VALUE3');

-- POPULATING PATIENT TABLE
INSERT INTO PATIENT(ID, F_NAME, l_NAME, GENDER, PHONE, CITY, STATE, SSN)
VALUES
('PAT0000001', 'JOHN', 'MURPHY' , 'M', '9132347654', 'BALTIMORE', 'MD', '876290987'),
('PAT0000002', 'JANE', 'DOE' , 'F', '9132222654', 'COLUMBIA', 'MD', '098359864'),
('PAT0000003', 'JAMIE', 'SANCHO' , 'M', '9132347111', 'BALTIMORE', 'MD', '894781234');


INSERT INTO PATIENT(ID, F_NAME, l_NAME, GENDER, PHONE, CITY, STATE, SSN)
VALUES
('PAT0000005', 'JOHN', 'MURPHY' , 'M', '9132340076', 'BALTIMORE', 'MD', '336290987');


INSERT INTO PATIENT(ID, F_NAME, l_NAME,  PHONE, CITY, STATE, SSN)
VALUES
('PAT0000006', 'JOHN', 'MURPHY' , '9132340076', 'BALTIMORE', 'MD', '336290980');

SELECT * FROM PATIENT;

---POPULATING PROVIDER TABLE
INSERT INTO PROVIDER(ID, PROVIDER_NAME)
VALUES
(9873696486, 'JOHN HOPKINS HOSPITAL'),
(9867367123, 'KAISER PERMANENTE'),
(0986749164, 'NATIONWIDE HOSPITAL');

---POPULATING PAYOR TABLE
INSERT INTO PAYOR( PAYOR_NAME)
VALUES
('BLUE CROSS BLUE SHIELD'),
('UNITED HEALTH GROUP');

-- POPULATING CLAIMS TABLE
INSERT INTO CLAIMS( CLAIM_NUMBER, PROVIDER_ID, PAYOR_ID, PATIENT_ID, DATE_OF_SERVICE,
			D_CODE, AMOUNT	)
VALUES
(1007, 9873696486, 100, 'PAT0000001', '09-19-2022', 'GB11', '1,200'),
(1002, 0986749164, 101, 'PAT0000003', '09-19-2022', 'XR11', '200'),
(1009, 9867367123, 100, 'PAT0000002', '09-19-2022', 'DG11', '22,900'),
(1003, 9873696486, 101, 'PAT0000005', '09-19-2022', 'GB01', '1,200');

SELECT * FROM CLAIMS

---UPDATE
--SYNTAX
--UPDATE TABLE_NAME
--SET COLUMNNAME = 'NEW VALUE'
--WHERE <CONDITION GOES HERE>

----MODIFYING JOHN PAT000006 LAST NAME
UPDATE PATIENT
SET L_NAME = 'WILSON'
WHERE ID = 'PAT0000006'

SELECT * FROM PATIENT;

---DELETE ---
--SYNTAX
--DELETE
--FROM TABLE_NAME
--WHERE <CONDITION GOES HERE>

--- REMOVING JOHN PAT000006 FROM PATIENT TABLE
DELETE
FROM PATIENT 
WHERE ID = 'PAT0000006';

--- TRUNCATING PATIENT TABLE
TRUNCATE TABLE PATIENT;













