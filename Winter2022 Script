--01/19/2022
---DATA DEFINITION LANGUAGE (DDL) COMMAMDS
--CREATE -- create databases/tables/schemas
--ALTER -- modifies an existing table
---DROP -- remove or delete an entire table or constraint
--TRUNCTATE -- removes all records from a table but maintans the structure.

---SYNTAX
--CREATE DATABASE DATABASENAME;

-- CREATING DATABASE COMPANY_DB
CREATE DATABASE COMPANY_DB;

--SYNTAX
--CREATE TABLE TABLENAME
--(
--COLUMN1 DATATYPE CONSTRAINT,
--COLUMN2 DATATYPE CONSTRAINT,
--COLUMN3 DATATYPE CONSTRAINT,
-----
--);

USE COMPANY_DB;

---CREATING EMPLOYEE TABLE
CREATE TABLE EMPLOYEE
(
EMPLOYEE_ID INTEGER NOT NULL,
FIRST_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
DEPARTMENT_ID INTEGER NULL,
DOB DATE NOT NULL,
GENDER CHAR(1),
PHONE CHAR(10)
);

--PRIMARY KEY IS A UNIQUE IDENTIFIER IN A TABLE

--SYNTAX
--ALTER TABLE TABLENAME
--ADD CONSTRAINT CONSTRAINTNAME PRIMARY KEY(COLUMN);

--- ADDING PK TO EMPLOYEE TABLE
ALTER TABLE EMPLOYEE
ADD CONSTRAINT PK_EMPLOYEE_EMPLOYEE_ID PRIMARY KEY (EMPLOYEE_ID);

-- CREATING DEPARTMENT TABLE
CREATE TABLE DEPARTMENT
(
DEPARTMENT_ID VARCHAR(10) NOT NULL,
DEPARTMENT_NAME VARCHAR(50) NOT NULL,
DEPARTMENT_LOCATION VARCHAR(50) NULL
);

-- ADDING PK TO DEPARTMENT TABLE
ALTER TABLE DEPARTMENT
ADD CONSTRAINT PK_DEPARTMENT_DEPARTMENT_ID PRIMARY KEY (DEPARTMENT_ID);


---01/20/2022
---FOREIGN KEY
--A COLUMN OR FIELD IN ONE TABLE THAT REFERS TO THE PRIMARY KEY COLUMN IN
--ANOTHER TABLE
--ALTER TABLE TABLENAME
--ADD CONSTRAINT CONSTRAINTNAME FOREIGN KEY (FOREIGNCOLUMN)
--REFERENCES PARENTTABLE(COLUMNNAME)

--ADDING FK TO EMPLOYEE TABLE
ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENT_ID FOREIGN KEY(DEPARTMENT_ID)
REFERENCES DEPARTMENT(DEPARTMENT_ID);

--SYNTAX
--ALTER TABLE TABLENAME
--ALTER COLUMN COLUMNNAME DATATYPE CONSTRAINT;

---CHANGING DEPARTMENT_ID DATATYPE
ALTER TABLE EMPLOYEE
ALTER COLUMN DEPARTMENT_ID VARCHAR(10) NULL;

---ADDING SSN COLUMN
ALTER TABLE EMPLOYEE
ADD SSN CHAR(9);

--REMOVING SSN COLUMN
ALTER TABLE EMPLOYEE
DROP COLUMN SSN;

--UNIQUE CONSTRAINT ENSURES THAT ALL VALUES IN A COLUMN ARE DIFFERENT.
--AND THERE CAN BE MORE THAN ONE UNIQUE CONSTRAINT DEFINED ON A TABLE.
ALTER TABLE EMPLOYEE
ADD CONSTRAINT UQ_EMPLOYEE_SSN UNIQUE (SSN);

--DEFAULT COUNSTRAINT WILL AUTOMATICALLY ASSIGN A VALUE IF NO VALUE HAS 
--BEEN SPECIFIED

-- SETTING  DEFAULT VALUE FOR GENDER COLUMN TO (N) IN SCENERIOS WHERE IT 
-- IS NOT PROVIDED.
ALTER TABLE EMPLOYEE
ADD CONSTRAINT DFT_EMPLOYEE_GENDER DEFAULT('N') FOR GENDER;

--CHECK CONSTRAINT VERIFIES THAT ALL VALUES IN A FIELD 
--SATISFY A CONDITION

--ADDING CHECK CONSTRAINT TO VERIFY THAT SSN LEMGHT OF 9 CHARACTERS IS MET.
ALTER TABLE EMPLOYEE
ADD CONSTRAINT CHK_EMPLOYEE_SSN CHECK(LEN(SSN) =9);


CREATE TABLE DEPARTMENT1
(
DEPARTMENT_ID VARCHAR(10) NOT NULL,
DEPARTMENT_NAME VARCHAR(50) NOT NULL,
DEPARTMENT_LOCATION VARCHAR(50) NULL
);

--DROP SYNTAX
--DROP TABLE TABLENAME3

--DELETING/ DROPPING DEPARTMENT1 TABLE
DROP TABLE DEPARTMENT1;

--REMOVING ALL RECORDS FROM DEPARTMENT1 TABLE
TRUNCATE TABLE DEPARTMENT1;

---REMOVING EMPLOYEE_ID COLUMN FROM EMPLOYEE TABLE
ALTER TABLE EMPLOYEE
DROP COLUMN EMPLOYEE_ID;

---REMOVING PK CONSTRAINT FROM EMPLOYEE TABLE
ALTER  TABLE EMPLOYEE
DROP PK_EMPLOYEE_EMPLOYEE_ID;

---ADDING NEW COLUMN TO EMPLOYEE
ALTER TABLE EMPLOYEE
ADD EMPLOYEE_ID INTEGER IDENTITY(100,1);

--CLUSTERED
--NONCLUSTERED

--- CREATING A UNIQUE NONCLUSTERED INDEX
CREATE  UNIQUE NONCLUSTERED INDEX IDX_EMPLOYEE_PHONE ON EMPLOYEE(PHONE)

---REMOVING INDEX 
DROP INDEX EMPLOYEE.IDX_EMPLOYEE_PHONE;

---RENAME A COLUMN SYNTAX
--EXEC sp_rename 'TABLENAME.OLDCOLUMNNAME','NEWCOLUMNNAME','COLUMN';

---RENAMING DEPARTMENT_NAME IN DEPARTMENT TABLE TO D_NAME
EXEC sp_rename 'DEPARTMENT.DEPARTMENT_NAME','D_NAME','COLUMN';

--INSERT CREATE RECORDS
--UPDATE MODIFIES AN EXISTING RECORD BASED ON A CONDITION
---DELETE REMOVE OR DELETE EXISTING RECORDS (BASED ON A CONDITION)
-- SELECT RETRIEVE RECORDS FROM ONE OR MORE TABLES

---INSERT
--SYNTAX
--INSERT INTO TABLENAME (COLUMN1,COLUMN2,COLUMN3,...)
--VALUES (VALUE1, VALUE2, VALUE3),
--		(VALUE1, VALUE2, VALUE3),
--		(VALUE1, VALUE2, VALUE3);

--POPULATING DEPARTMENT TABLE
INSERT INTO DEPARTMENT (DEPARTMENT_ID,D_NAME, DEPARTMENT_LOCATION)
VALUES  	('000000001' , 'SALES', 'MARYLAND'),
		('000000002' , 'POLICY', 'FLORIDA'),
		('000000003' , 'UNDERWRITTING', 'VIRGINIA'),
		('000000004' , 'CLAIMS', 'TEXAS'),
		('000000005' , 'CUSTOMER', NULL);

--RETRIEVING ALL RECORDS FROM DEPARTMENT TABLE
SELECT * FROM DEPARTMENT

--POPULATING EMPLOYEE TABLE
INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, DEPARTMENT_ID, DOB,GENDER,
						PHONE,SSN)
VALUES
('JON', 'SNOW', '000000005', '09-19-1990', 'M', '1234567890', '222333448'),
('JAMES', 'SIMS', '000000001', '09-19-1980', NULL, '1234647890', '229633448'),
('QUEEN', 'STAR', '000000004', '09-19-1890', 'F', '1034567890', '274333448'),
('ZANE', 'SMITH', '000000005', '03-10-1989', 'M', '0034567890', '200333448'),
('AMA', 'AQUAH', '000000005', '09-19-1990', 'F', '1234057890', '211333448');

---POPULATING EMPLOYEE TABLE
INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, DEPARTMENT_ID, DOB,
						PHONE,SSN)
VALUES
('RITA', 'BROWN', '000000005', '09-09-1990',  '1239167890', '209333448');

--RETRIEVING ALL RECORDS FROM EMPLOYEE TABLE
SELECT * FROM EMPLOYEE
